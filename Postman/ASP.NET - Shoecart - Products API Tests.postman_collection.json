{
	"info": {
		"_postman_id": "a28911dc-d745-4518-9baf-ef903f9e1854",
		"name": "ASP.NET - Shoecart - Products API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "261942"
	},
	"item": [
		{
			"name": "GET Requests to Retrieve  Product - Individual product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be a single product\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var product = jsonData.value;\r",
							"    pm.expect(product).to.be.an('object');\r",
							"    pm.expect(product).to.have.property('productId');\r",
							"    pm.expect(product).to.have.property('description');\r",
							"    pm.expect(product).to.have.property('price');\r",
							"    pm.expect(product).to.have.property('imageUrl');\r",
							"    pm.expect(product.imageUrl).to.be.an('array').that.is.not.empty;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7205/api/Product/1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Product",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Requests to Retrieve Product - All products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7205/api/Product",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Product"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Request to Add products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should contain success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Product created');\r",
							"    pm.expect(jsonData).to.have.property('statusCode').eql(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Description\": \"Sneakers Shoe\",\r\n    \"ImageUrl\": [\"http://example.com/sample-product.jpg\"],\r\n    \"Price\": 52.99,\r\n    \"ShippingCost\": 10.00\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7205/api/Product/",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Product",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Requests to Update products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Product updated');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Description\": \"New Sneakers Shoe\",\r\n    \"ImageUrl\": [\"http://example.com/sample-product.jpg\"],\r\n    \"Price\": 52.99,\r\n    \"ShippingCost\": 10.00\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7205/api/Product/6",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Product",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Requests to Update products - Trying to update a non-existent product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Product not found');\r",
							"    pm.expect(jsonData).to.have.property('statusCode').eql(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"product_id\": 10,\r\n  \"title\": \"New Tennis Shoe\",\r\n  \"description\": \"New Shoe Description\",\r\n  \"price\": \"99.99\",\r\n  \"image_url\": [\r\n    \"/images/new-shoe-3.jpg\",\r\n    \"/images/new-shoe-2.jpg\"\r\n  ],\r\n  \"sizes\": [\r\n    {\r\n      \"size_us\": 7,\r\n      \"quantity\": 10\r\n    },\r\n    {\r\n      \"size_us\": 8,\r\n      \"quantity\": 10\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7205/api/Product/2",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Product",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request to Remove products (Positive Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Product deleted');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:7205/api/Product/6",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Product",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request to Remove products (Negative Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Product not found');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:7205/api/Product/3",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Product",
						"3"
					]
				}
			},
			"response": []
		}
	]
}