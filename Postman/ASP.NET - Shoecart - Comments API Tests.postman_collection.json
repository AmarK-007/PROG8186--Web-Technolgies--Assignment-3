{
	"info": {
		"_postman_id": "a11db6a5-8add-465f-9144-ae22534d44da",
		"name": "ASP.NET - Shoecart - Comments API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "261942"
	},
	"item": [
		{
			"name": "GET Request all data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value.data).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7205/api/Comment",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Request with wrong ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Comment not found');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7205/api/Comment/{id}?commentid=1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Comment",
						"{id}"
					],
					"query": [
						{
							"key": "commentid",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Request (Positive Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Created comment');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"ProductId\": 1,\r\n    \"UserId\": 2,\r\n    \"Rating\": 5,\r\n    \"Image\": \"https://example.com/image.jpg\",\r\n    \"Text\": \"This is a test comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7205/api/Comment",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Request (Negative Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('User not found');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"product_id\": 1,\r\n        \"user_id\": 1,\r\n        \"comment\": \"Great product!\"\r\n     }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7205/api/Comment",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Comment"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Request (Positive Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Updated comment');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"ProductId\": 1,\r\n    \"UserId\": 2,\r\n    \"Rating\": 5,\r\n    \"Image\": \"https://example.com/image.jpg\",\r\n    \"Text\": \"This is a test comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7205/api/Comment/{id}?commentid=2",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Comment",
						"{id}"
					],
					"query": [
						{
							"key": "commentid",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Request (Negative Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Comment not found');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"ProductId\": 1,\r\n    \"UserId\": 2,\r\n    \"Rating\": 5,\r\n    \"Image\": \"https://example.com/image.jpg\",\r\n    \"Text\": \"This is a test comment\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7205/api/Comment/{id}?commentid=1",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Comment",
						"{id}"
					],
					"query": [
						{
							"key": "commentid",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request (Positive Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Deleted comment');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:7205/api/Comment/{id}?commentid=5",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Comment",
						"{id}"
					],
					"query": [
						{
							"key": "commentid",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request (Negative Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.have.property('message').eql('Comment not found');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:7205/api/Comment/{id}?commentid=3",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7205",
					"path": [
						"api",
						"Comment",
						"{id}"
					],
					"query": [
						{
							"key": "commentid",
							"value": "3"
						}
					]
				}
			},
			"response": []
		}
	]
}